<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on A Gopher&#39;s Site</title>
    <link>https://li-go.github.io/tags/algorithm/</link>
    <description>Recent content in algorithm on A Gopher&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Aug 2019 15:52:27 +0900</lastBuildDate>
    
	<atom:link href="https://li-go.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dynamic Programming</title>
      <link>https://li-go.github.io/posts/dynamic-programming/</link>
      <pubDate>Mon, 26 Aug 2019 15:52:27 +0900</pubDate>
      
      <guid>https://li-go.github.io/posts/dynamic-programming/</guid>
      <description> To be built </description>
    </item>
    
    <item>
      <title>Quick Sort</title>
      <link>https://li-go.github.io/posts/quick-sort/</link>
      <pubDate>Mon, 26 Aug 2019 15:45:34 +0900</pubDate>
      
      <guid>https://li-go.github.io/posts/quick-sort/</guid>
      <description>package sort // Quick sorts nums from index l to r func Quick(nums []int, l, r int) { if l &amp;gt;= r { return } p := partition(nums, l, r) quickSort(nums, l, p-1) quickSort(nums, p+1, r) } // partition puts nums[hi] to its right place and return the index of it func partition(nums []int, lo, hi int) int { i := lo - 1 for j := lo; j &amp;lt; hi; j++ { if nums[j] &amp;lt; nums[hi] { i++ nums[i], nums[j] = nums[j], nums[i] } } nums[i+1], nums[hi] = nums[hi], nums[i+1] return i + 1 }  </description>
    </item>
    
  </channel>
</rss>